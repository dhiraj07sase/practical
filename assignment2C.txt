home.component.html

<!-- ng generate service services/auth -->

  <div>
    <!-- <img
     
      src="assets/ng.png"
      alt=""
      width="10%"
      height="10%"
    /> -->
    <h1>Simple Angular Application</h1>
    <div>
      <p>
        This is simple angular application for user registration, login and
        profile components. 
      </p>
      
      <div>
        <button type="button" class="btn btn-primary btn-lg px-4 gap-3"
          (click)="registerComponent()"
        >
          Register Now
        </button>
        <button
          type="button"
          class="btn btn-outline-secondary btn-lg px-4"
          (click)="login()"
        >
          Login
        </button>
      </div>
    </div>
  </div>
  
####home.component.ts


import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrl: './home.component.css'
})
export class HomeComponent implements OnInit {
  constructor(private router: Router) { }

  ngOnInit(): void {
  }

  registerComponent() {
    this.router.navigate(['register'])
  }

  login() {
    this.router.navigate(['login'])
  }


}


###login compoinent html


  <div class="register" class="text-center">
    <main class="form-signin">
      <form #loginForm = 'ngForm' (ngSubmit)="login(loginForm)">
        <!-- 'ngForm' (ngSubmit)="login(loginForm)"> -->
        <img class="mb-4" src="assets/ng.png" alt="" width="20%" />
        <h1 class="h3 mb-3 fw-normal">Login</h1>
        <div class="form-floating mb-2">
          <input
            type="email"
            class="form-control"
            id="email"
            name="email"
            placeholder="Enter your registered Email ID "
            ngModel
          />
        
        </div>
        <div class="form-floating">
          <input
            type="password"
            class="form-control"
            id="password"
            name="password"
            placeholder="Enter your Password"
            ngModel
          />
        
        </div>
        <button class="w-100 btn btn-lg btn-primary mt-2">
          Login
        </button>
        <p class="mt-5 mb-3 text-muted">Not Registered? <a routerLink="/register">Register Now</a></p>
      </form>
    </main>
  </div>


###login component ts

import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { AuthService } from '../services/auth.service';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css'],
})
export class LoginComponent implements OnInit {
  constructor(private router: Router, private authService: AuthService) {}

  ngOnInit(): void {}

  login(formData: any) {
    // console.log(formData.value);
    // let data = this.authService.loginUser(formData.value);
    // console.log(data);
    if (this.authService.loginUser(formData.value)) {
      alert('Login Successful');
      this.router.navigate(['profile']);
    } else {
      alert('Login Failed');
    }
  }
}


####profile component html

<div class="float-end">
    <button
      type="button"
      class="btn btn-primary position-relative"
      (click)="logout()"
    >
      Log out <i class="bi bi-box-arrow-in-right"></i>
    </button>
  </div>
  <main class="mt-5 pt-3">
    <div class="container">
      <div class="h1 my-4 text-center">User Profile</div>
      <div class="row my-5">
        <div class="card">
          <div class="card-body">
            <small class="text-uppercase  text-muted">
              User Information
            </small>
            <hr />
            <p class="card-text ">
              Name -<span class="text-uppercase">{{ userData.name }}</span>
            </p>
            <hr />
            <p class="card-text ">
              Email -<span>{{ userData.email }}</span>
            </p>
            <hr />
            <p class="card-text ">
              Branch -<span class="text-uppercase">{{ userData.branch }}</span>
            </p>
            <hr />
            <p class="card-text ">
              Gender -<span class="text-uppercase">{{ userData.gender }}</span>
            </p>
          </div>
        </div>
      </div>
    </div>
  </main>



###profile component ts

import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { AuthService } from '../services/auth.service';

@Component({
  selector: 'app-profile',
  templateUrl: './profile.component.html',
  styleUrls: ['./profile.component.css'],
})
export class ProfileComponent implements OnInit {
  userData: any;
  constructor(private router: Router, private authService: AuthService) {
    this.userData = this.authService.getProfile();
  }

  ngOnInit(): void {}

  logout() {
    if (this.authService.logout()) {
      alert('Logout Successfully');
      this.router.navigate(['login']);
    }
  }
}


###register component html

<!-- 87% of storage used … If you run out, you can't create, edit, and upload files. Get 100 GB of storage for ₹130.00 ₹35.00/month for 2 months. -->
<div class="register" class="text-center">
  <main class="form-signin">
    <form [formGroup] = 'form' (ngSubmit)="register()">
      <img class="mb-4" src="assets/ng.png" alt="" width="20%" />
      <h1 class="h3 mb-3">Register</h1>

      <div>
	<input
          type="text"
          class="form-control"
          formControlName="name"
          placeholder="Enter your name"
        />
     
      </div>
      <div>
        <input
          type="email"
          class="form-control"
          formControlName="email"
          placeholder="Enter your Email ID"
        />
        
      </div>
      <div>
        <input
          type="password"
          class="form-control"
          formControlName="password"
          placeholder="Enter your Password"
        />
        
      </div>
      <div class="text-start">
        <label class="text-start mb-1">Gender</label>
      </div>
      <div class="form-check text-start">
        <input
          class="form-check-input"
          type="radio"
          name="gender"
          formControlName="gender"
          value="male"
        />
        <label > Male </label>
      </div>
      <div class="form-check text-start">
        <input
          class="form-check-input"
          type="radio"
          name="gender"
          formControlName="gender"
          value="female"
        />
        <label> Female </label>
      </div>
      <div class="text-start">
        <label for="password" class="text-start mb-1">Select Branch</label>
      </div>
      <select class="form-select mb-2" formControlName="branch">
      
        <option value="it">I.T</option>
        <option value="cse">C.S.E.</option>
        <option value="mechanical">Mechanical</option>
        <option value="civil">Civil</option>
      </select>
      <button [disabled]="loading" class="w-100 btn btn-lg btn-primary mt-2">
        <span *ngIf="loading" class="spinner-border spinner-border-sm mr-1"></span>
        Register
      </button>
      <p class="mt-5 mb-3 text-muted">Already Registered? Login <a routerLink="/login">here</a></p>
    </form>
  </main>
</div>


####register component ts

import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';
import { Router } from '@angular/router';
import { AuthService } from '../services/auth.service';

@Component({
  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css'],
})
export class RegisterComponent implements OnInit {
  form!: FormGroup;
  loading = false;
  submitted = false;

  constructor(
    private router: Router,
    private formBuilder: FormBuilder,
    private authService: AuthService
  ) {}

  ngOnInit(): void {
    this.form = this.formBuilder.group({
      name: [''],
      email: [''],
      password: [''],
      gender: [''],
      branch: [''],
    });
  }

  register() {
    this.submitted = true;
    this.loading = true;
    console.log(this.form.value);
    if (this.authService.registerUser(this.form.value)) {
      alert('User Register Successfully');
      this.router.navigate(['login']);
    } else {
      alert('error');
    }
  }
}

###authservice .ts


import { Injectable } from '@angular/core';

@Injectable({
  providedIn: 'root'
})
export class AuthService {

  constructor() { }
  
  registerUser(data: any) {
    localStorage.setItem('user', JSON.stringify(data));
    return true;
  }

  loginUser(data: any) {
    if (localStorage.getItem('user')) {
      let localData = JSON.parse(localStorage.getItem('user') || '');
      if (
        data.email === localData.email &&
        data.password === localData.password
      ) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }

  getProfile() {
    let localData = JSON.parse(localStorage.getItem('user') || '');
    return localData;
  }

  logout() {
    localStorage.removeItem('user');
    return true;
  }
}

###app routing module .ts

import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
import { AppComponent } from './app.component';
import { HomeComponent } from './home/home.component';
import { RegisterComponent } from './register/register.component';
import { ProfileComponent } from './profile/profile.component';
import { LoginComponent } from './login/login.component';

const routes: Routes = [
  { path: '', component: HomeComponent },
  { path: 'login', component: LoginComponent },
  { path: 'register', component: RegisterComponent },
  { path: 'profile', component: ProfileComponent },
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }


###app component .html

<div class="container">
    <router-outlet></router-outlet>
  </div> 
  
####app component .ts


import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent {
  title = 'Assignment2c';
}

#### index .html

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Assignment2c</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

</head>
<body>
  <app-root></app-root>
</body>
</html>



### app.modul.ts

import { NgModule } from '@angular/core';
import { BrowserModule, provideClientHydration } from '@angular/platform-browser';

import { AppRoutingModule } from './app-routing.module';
import { AppComponent } from './app.component';
import { HomeComponent } from './home/home.component';
import { LoginComponent } from './login/login.component';
import { RegisterComponent } from './register/register.component';
import { ProfileComponent } from './profile/profile.component';

import { FormsModule, ReactiveFormsModule } from '@angular/forms';


//metaData Configuration
@NgModule({
  declarations: [
    AppComponent,
    HomeComponent,
    LoginComponent,
    RegisterComponent,
    ProfileComponent
    
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    FormsModule,
    ReactiveFormsModule
  ],
  providers: [
    provideClientHydration()
  ],
  bootstrap: [AppComponent]
})
export class AppModule { }




















